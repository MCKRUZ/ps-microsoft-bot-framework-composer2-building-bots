[NewMovie-form-extensions.en-us.lg](NewMovie-form-extensions.en-us.lg)

>> Change Property Prompt

# changePropertyPrompt
> Prompt activity for property to change
[Activity
    Text = ${changePropertyPrompt_text()}
]

# changePropertyPrompt_text
> Prompt for property to change
- Is there any property you want to change? (no or the property name)

>> Choose Property Prompt

# choosePropertyPrompt
> Prompt activity for what property to change
[Activity
    Text = ${choosePropertyPrompt_text()}
]

# choosePropertyPrompt_text
> Prompt for what property to change
- Which property do you want to change?

>> Cancel Prompt

# cancelPrompt
> Prompt activity to cancel a form
[Activity
    Text = ${cancelPrompt_text()}
]

# cancelPrompt_text
> Prompt to cancel a form
- Do you want to end the form? (yes/no)

>> OnChooseProperty Prompt

# chooseProperties
> Choose properties activity
[Activity
    Text = ${chooseProperties_text()}
]

# chooseProperties_text
> Choose between different properties
- Did you mean ${choices(turn.dialogEvent.value, 'chooseProperty', 'or')}?

>> Show Card Prompt

# propertiesAsActivity(name, properties)
> Display value for properties as an activity
[Activity
    Attachments=${json(propertiesAsCard(name, properties))}
]

>> Help Global Prompt

# helpGlobal()
> Global help message activity
[Activity
    Text = ${helpGlobal_text()}
]

# helpGlobal_text()
> Global help message 
- ```
${requiredProperties()}
${optionalProperties()}
For each property you can add/remove values, clear, show, change or ask for help.
You can also ask for over all help, cancel the whole form or skip a step.```

>> Help Reprompt

# helpReprompt
> Display reprompt activity
[Activity
    Text = ${helpReprompt_text()}
]

# helpReprompt_text
> Display value on reprompt
- ${if($expectedProperties, join(foreach(where($expectedProperties, expected, isTemplate(`${expected}_RepromptHelp_text`)), expected, template(`${expected}_RepromptHelp_text`)), EOL()), '')}

>> not Understood Prompt

# notUnderstood
> Message for not understanding activity
[Activity
    Text = ${notUnderstood_text()}
]

# notUnderstood_text
> Message for not understanding
- Sorry, I do not understand ${join(foreach(turn.unrecognizedtext, chunk, `'${chunk}'`), ' or ')}

> Generator: 12d6b8ec51ff776b10f313393dd9e8c1